"""init

Revision ID: 9a8326e5378a
Revises: 
Create Date: 2023-09-16 12:33:12.785139

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9a8326e5378a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('username', sa.String(), nullable=True, comment='Никнейм пользователя'),
    sa.Column('email', sa.String(), nullable=True, comment='Email пользователя'),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Активен'),
    sa.Column('is_admin', sa.Boolean(), nullable=True, comment='Администратор'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата и время создания'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_profiles_email'), 'users_profiles', ['email'], unique=True)
    op.create_index(op.f('ix_users_profiles_id'), 'users_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_users_profiles_username'), 'users_profiles', ['username'], unique=True)
    op.create_table('external_files',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, comment='Идентификатор'),
    sa.Column('title', sa.String(), nullable=True, comment='Наименование'),
    sa.Column('file_path', sa.String(), nullable=True, comment='Файл'),
    sa.Column('owner_id', sa.Integer(), nullable=True, comment='Владелец файла'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата и время создания'),
    sa.ForeignKeyConstraint(['owner_id'], ['users_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_external_files_id'), 'external_files', ['id'], unique=False)
    op.create_index(op.f('ix_external_files_title'), 'external_files', ['title'], unique=False)
    op.create_table('result_files',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, comment='Идентификатор'),
    sa.Column('title', sa.String(), nullable=True, comment='Наименование'),
    sa.Column('file_path', sa.String(), nullable=True, comment='Файл'),
    sa.Column('owner_id', sa.Integer(), nullable=True, comment='Владелец файла'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата и время создания'),
    sa.ForeignKeyConstraint(['owner_id'], ['users_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_result_files_id'), 'result_files', ['id'], unique=False)
    op.create_index(op.f('ix_result_files_title'), 'result_files', ['title'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_result_files_title'), table_name='result_files')
    op.drop_index(op.f('ix_result_files_id'), table_name='result_files')
    op.drop_table('result_files')
    op.drop_index(op.f('ix_external_files_title'), table_name='external_files')
    op.drop_index(op.f('ix_external_files_id'), table_name='external_files')
    op.drop_table('external_files')
    op.drop_index(op.f('ix_users_profiles_username'), table_name='users_profiles')
    op.drop_index(op.f('ix_users_profiles_id'), table_name='users_profiles')
    op.drop_index(op.f('ix_users_profiles_email'), table_name='users_profiles')
    op.drop_table('users_profiles')
    # ### end Alembic commands ###
